---
// login page
import styles from "@styles/Subscriber.module.scss";
import MainLayout from "@layouts/MainLayout.astro";
import themeStyles from "@styles/ThemeElements.module.scss";
import InputPassword from "@components/InputPassword.astro";
import Banner from "@components/Banner.astro";
import { db } from "@config/apis";
import { m, createSession, validateCaptcha } from "@lib/util";
import { verify } from "@lib/hash";
import InputCaptcha from "@components/InputCaptcha.astro";

const { user, ip } = Astro.locals;
// redirect to dashboard if they're already signed in

let to = Astro.url.searchParams.get("to") || null;
if (!to || to === "/pro/" || !to.startsWith("/")) to = "/pro/dashboard";
if (user) return Astro.redirect(to, 302);

let error: string | undefined;

let incorrectCreds = false;
// is the initial value of the input
let bademail: string | undefined;
let badpassword: string | undefined;

if (Astro.request.method === "POST")
  try {
    const data = await Astro.request.formData();
    const email = data.get("email")?.toString() || "";
    const password = data.get("password")?.toString() || "";
    const staySignedIn = data.get("staySignedIn")?.toString() === "on";
    const captchaToken = data.get("g-recaptcha-response")?.toString();

    error = await validateCaptcha(captchaToken, ip);

    if (email === "") {
      error = "Please enter your email.";
      Astro.response.status = 400;
    } else if (password === "") {
      error = "Please enter your password.";
      Astro.response.status = 400;
    } else if (!error) {
      const user = (
        await db.query<m.UserModel>("SELECT * FROM users WHERE email = $1;", [
          email,
        ])
      ).rows[0];

      if (user) {
        const passwordCorrect = await verify(password, user.password_hash);

        if (passwordCorrect) {
          const session = await createSession(ip, user);
          Astro.locals.setSession(session.secret, staySignedIn);
          return Astro.redirect(to, 302);
        }
      }

      incorrectCreds = true;
      bademail = email;
      badpassword = password;
      Astro.response.status = 401;
    }
  } catch (err) {
    console.error(err);
    error = "An internal error occurred. Please try again later.";
    Astro.response.status = 500;
  }

const bai = Astro.url.searchParams.has("bai");
---

{bai && <script>history.pushState({}, "", "/pro/")</script>}
<MainLayout>
  <main class={styles.subscriberMain}>
    <div class={styles.register}>
      <div class={styles.description}>
        <h1 class:list={[styles.pageTitle, "page-title"]}>
          Subscriber Dashboard
        </h1>
        <p>
          In order to subscribe, change account settings, or access your perks
          such as the virtual browser, you need a subscriber account.
        </p>
        <h3>Do I have to sign up?</h3>
        <p>
          We welcome anyone to purchase a subscription from Holy Unblocker, and
          we greatly benefit from your support, but you don't have to purchase a
          subscription in order to access Ultraviolet or the rest of the site.
        </p>
        <h3>What are the perks?</h3>
        <p>You can check out our pricing page to learn more:</p>
        <a href="/pro/tiers">
          <input
            type="button"
            class={styles.prettySubmit}
            value="See Pricing"
          />
        </a>
      </div>
      <form class={styles.loginForm} method="post">
        <h1 class={styles.formTitle}>Subscriber Login</h1>
        {
          incorrectCreds && (
            <p class="prettyBanner" data-error>
              Incorrect email or password.{" "}
              <u>
                <a href="/pro/signup">Did you mean to signup?</a>
              </u>
            </p>
          )
        }
        <Banner
          error={error}
          success={bai ? "thanks for stopping by!" : undefined}
        />
        <label class={styles.manageField}>
          <div>Email</div>
          <input
            type="email"
            name="email"
            class={styles.prettyinput}
            value={bademail}
            required
          />
        </label>
        <label class={styles.manageField}>
          <div>Password</div>
          <InputPassword id="password" name="password" value={badpassword} />
        </label>
        <InputCaptcha />
        <p>
          <label
            ><input type="checkbox" name="staySignedIn" /> Stay signed in.</label
          >
        </p>
        <input
          class:list={[styles.prettySubmit, styles.wide]}
          type="submit"
          value="Login"
        />
        <p>
          New to Holy Unblocker? <a
            class={themeStyles.themeLink}
            href="/pro/signup">Create an account</a
          >
        </p>
        <p>
          Forgot your login? <a
            class={themeStyles.themeLink}
            href="/pro/forgot-password">Reset password</a
          >
        </p>
      </form>
    </div>
  </main>
</MainLayout>
