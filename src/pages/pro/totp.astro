---
import themeStyles from "@styles/ThemeElements.module.scss";
import styles from "@styles/Subscriber.module.scss";
import MainLayout from "@layouts/MainLayout.astro";
import { authenticator } from "otplib";
import { db } from "@config/apis";
import crypto from "node:crypto";
import qrcode from "qrcode";
import Banner from "@components/Banner.astro";
import ArrowBackIcon from "@icons/arrow_back_FILL0_wght400_GRAD0_opsz24.svg?react";
import HolyLink from "@components/HolyLink.astro";

let error: string | undefined;
let success: string | undefined;

const { user, acc } = Astro.locals;
if (await acc.isBanned()) return acc.toBan();
if (acc.needsToVerifyTotp()) return acc.toVerifyTotp();
if (!user) return acc.toLogin();
if (!user.email_verified) return acc.toVerifyEmail();

let backupCode: string | undefined;

let genNewCode = true;

if (Astro.request.method === "POST")
  try {
    const data = await Astro.request.formData();
    const type = data.get("type")?.toString();

    switch (type) {
      case "disable":
        {
          const token = data.get("code");

          if (!user.totp_enabled) {
            error = "2FA not enabled";
          } else if (
            typeof token !== "string" ||
            (token !== user.totp_backup_code &&
              !authenticator.verify({ token, secret: user.totp_secret! }))
          ) {
            error = "Incorrect 2FA code, please try again.";
          } else {
            user.totp_enabled = null;
            user.totp_secret = null;
            user.totp_backup_code = null;
            await db.query(
              "UPDATE users SET totp_enabled = null, totp_backup_code = null WHERE id = $1;",
              [user.id]
            );
            success = "2FA disabled.";
          }
        }
        break;
      case "verify":
        {
          const token = data.get("code");

          if (user.totp_enabled) {
            error = "2FA already enabled";
          } else if (user.totp_secret === null) {
            error = "2FA secret not ready";
          } else if (
            typeof token !== "string" ||
            !authenticator.verify({ token, secret: user.totp_secret })
          ) {
            error = "Incorrect 2FA code, please try again.";
            genNewCode = false;
          } else {
            user.totp_enabled = new Date();
            backupCode = crypto.randomBytes(6).toString("hex").toUpperCase();
            // console.log("gex", backupCode);
            user.totp_backup_code = backupCode;
            await db.query(
              "UPDATE users SET totp_enabled = $1, totp_backup_code = $2 WHERE id = $3;",
              [user.totp_enabled, user.totp_backup_code, user.id]
            );
            success = "2FA enabled.";
            user.session.totp_verified = true;
            await db.query(
              "UPDATE session SET totp_verified = true WHERE user_id = $1;",
              [user.id]
            );
          }
        }
        break;
    }
  } catch (err) {
    console.error(err);
  }

if (!user.totp_enabled && genNewCode) {
  user.totp_secret = authenticator.generateSecret();
  await db.query("UPDATE users SET totp_secret = $1 WHERE id = $2;", [
    user.totp_secret,
    user.id,
  ]);
}

const otpauth = authenticator.keyuri(
  user.email,
  "Holy Unblocker",
  user.totp_secret!
);
const qr = await qrcode.toDataURL(otpauth);

if (user.totp_secret !== null)
  console.log(
    "DEBUG 2FA CODE:",
    user.email,
    user.totp_backup_code,
    authenticator.generate(user.totp_secret)
  );
---

<MainLayout>
  <main class={styles.subscriberMain}>
    <h1 class="page-title sub">
      <a
        class="back-button"
        href="/pro/dashboard"
        set:html={ArrowBackIcon}
      />Account 2FA
    </h1>
    <Banner success={success} error={error} />

    {
      user.totp_enabled ? (
        <form class:list={[styles.changeForm, styles.user]} method="post">
          {typeof backupCode === "string" && (
            <>
              <p>
                This is your recovery code. Copy it and save it somewhere safe,
                you will need it incase you ever lose access to your
                authenticator:
              </p>
              <input
                type="text"
                class:list={[styles.prettyinput, styles.code]}
                value={backupCode}
                readonly
              />
            </>
          )}
          <p>Account 2FA was enabled on {user.totp_enabled.toString()}.</p>
          <p>
            If you want to disable 2FA, you will need to enter the code
            generated by your authenticator app or a backup code.
          </p>
          <input type="text" name="type" value="disable" hidden />
          <label class={styles.input}>
            <span>Code</span>
            <div class="change-email">
              <input
                type="text"
                class:list={[styles.prettyinput, styles.code]}
                name="code"
                required
              />
              <input
                type="submit"
                class:list={[styles.prettySubmit, styles.inline]}
                value="Disable 2FA"
                required
              />
            </div>
          </label>
        </form>
      ) : (
        <>
          <div class:list={[styles.changeForm, styles.user]}>
            <div id="qr" class={styles.totp_qr}>
              <img src={qr} />
              <p>
                Scan this code using the Authenticator app for{" "}
                <HolyLink
                  class={themeStyles.themeLink}
                  href="https://apps.apple.com/app/google-authenticator/id388497605"
                  text="iOS"
                />{" "}
                or
                <HolyLink
                  class={themeStyles.themeLink}
                  href="https://play.google.com/store/apps/details?id=com.google.android.apps.authenticator2"
                  text="Android"
                />
                .
              </p>
              <div class={themeStyles.themeLink} onclick="showSecret()">
                Can't scan the code?
              </div>
            </div>
            <div id="secret" class={styles.totp_secret} style="display:none">
              <p>Holy Unblocker: {user.email}</p>
              <p>Key: {user.totp_secret}</p>
              <p>Enter this code into your authenticator app.</p>
              <div class={themeStyles.themeLink} onclick="showQR()">
                Show QR Code
              </div>
            </div>
          </div>
          <form class:list={[styles.changeForm, styles.user]} method="post">
            <input type="text" name="type" value="verify" hidden />
            <label class={styles.input}>
              <span>Code</span>
              <div class="change-email">
                <input
                  type="text"
                  class:list={[styles.prettyinput, styles.code]}
                  name="code"
                  required
                />
                <input
                  type="submit"
                  class:list={[styles.prettySubmit, styles.inline]}
                  value="Enable 2FA"
                  required
                />
              </div>
            </label>
          </form>
        </>
      )
    }
  </main>
</MainLayout>

<script>
  const qr = document.getElementById("qr")!;
  const secret = document.getElementById("secret")!;

  declare global {
    var showSecret: () => void;
    var showQR: () => void;
  }

  window.showSecret = () => {
    secret.style.display = "";
    qr.style.display = "none";
  };

  window.showQR = () => {
    secret.style.display = "none";
    qr.style.display = "";
  };
</script>
