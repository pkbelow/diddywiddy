---
import SettingsLayout from "@layouts/SettingsLayout.astro";
import themeStyles from "@styles/ThemeElements.module.scss";
import styles from "@styles/Settings.module.scss";
import Check from "@icons/check_24dp.svg?react";
import { extractCloakData, getRandomCloak } from "@lib/cloak";
import Banner from "@components/Banner.astro";
import HolyText from "@components/HolyText.astro";

let success: string | undefined;
let error: string | undefined;

if (Astro.request.method === "POST")
  try {
    const data = await Astro.request.formData();
    let address = data.get("address");

    if (typeof address === "string") {
      if (!address.match(/^\w+:/)) {
        // try to correct the address
        if (address.includes(".")) {
          address = `http://${address}`;
        }
      }
      try {
        new URL(address);
      } catch {
        error = "Please enter a valid URL";
      }

      if (!error)
        try {
          Astro.locals.setCloak(await extractCloakData(address.toString()));
          success = "Cloak saved.";
        } catch (err: any) {
          error = err.message;
        }
    } else {
      const type = data.get("type")?.toString();

      switch (type) {
        case "random":
          {
            const random = await getRandomCloak();
            if (random === undefined) error = "Failure finding random cloak.";
            else {
              Astro.locals.setCloak(random);
              success = "Cloak set.";
            }
          }
          break;
        default:
        case "reset":
          Astro.locals.setCloak();
          success = "Cloak reset.";
          break;
      }
    }
  } catch (err) {
    console.error(err);
  }
---

<SettingsLayout title="Tab Cloak Settings">
  <section class={styles.section}>
    <h1 class="page-title sub settings">
      <HolyText text="Tab Cloak Settings" />
    </h1>
    <Banner success={success} error={error} />
    <p>
      <HolyText
        text="Tab Cloaking allows you to disguise Holy Unblocker as any website (eg. Google Classroom, Apple, Bing, Gmail, about:blank, etc)."
      />
    </p>
    <div>
      <p>URL</p>
      <form method="post">
        <!-- noscript support -->
        <div class:list={[themeStyles.ThemeInputBar, styles.inputBar]}>
          <input
            class={themeStyles.thinPadRight}
            type="text"
            name="address"
            placeholder="https://example.org/"
            id="tabcloak-value"
          />
          <button
            type="submit"
            class:list={[themeStyles.ThemeButton, themeStyles.block]}
            set:html={Check}
          />
        </div>
      </form>
    </div>
    <div>
      <form method="post">
        <input type="text" name="type" value="reset" hidden />
        <button class={themeStyles.ThemeButton}
          ><HolyText text="Reset Cloak" /></button
        >
      </form>
    </div>
    <div>
      <form method="post">
        <input type="text" name="type" value="random" hidden />
        <button class={themeStyles.ThemeButton}
          ><HolyText text="Random Cloak" /></button
        >
      </form>
    </div>
  </section>
</SettingsLayout>
<script>
  import { getCloak } from "@lib/cookies";

  document.addEventListener("astro:page-load", () => {
    const input = document.querySelector<HTMLInputElement>("#tabcloak-value");

    if (input === null) return;

    const cloak = getCloak();
    const icon = document.querySelector<HTMLLinkElement>(
      "link[rel='shortcut icon']"
    )!;
    if (cloak === undefined) {
      console.log("Reset cloak");
      document.title = "Tab Cloak Settings";
      icon.href = "/h.ico";
    } else {
      console.log("Found cloak", cloak);
      document.title = cloak.title;
      icon.href =
        cloak.icon === ""
          ? "data:,"
          : "/api/cloakicon?" + encodeURIComponent(cloak.icon);
    }

    input.form!.addEventListener("submit", (event) => {
      let address = input.value;

      if (!address.match(/^\w+:/)) {
        // try to correct the address
        if (address.includes(".")) {
          address = `http://${address}`;
        }
      }

      try {
        new URL(address);
      } catch {
        event.preventDefault();
        alert(
          "Please enter a valid URL or partial URL of a website\n(eg. google.com, kahoot.it, www.msn.com https://youtube.com/)"
        );
      }
    });
  });
</script>
